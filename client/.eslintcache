[{"/Users/Cristina/Desktop/nimbus/client/src/index.js":"1","/Users/Cristina/Desktop/nimbus/client/src/App.js":"2","/Users/Cristina/Desktop/nimbus/client/src/reportWebVitals.js":"3","/Users/Cristina/Desktop/nimbus/client/src/components/BaseLayout.js":"4","/Users/Cristina/Desktop/nimbus/client/src/components/Login.js":"5","/Users/Cristina/Desktop/nimbus/client/src/components/Register.js":"6","/Users/Cristina/Desktop/nimbus/client/src/components/Menu.js":"7","/Users/Cristina/Desktop/nimbus/client/src/components/Weather.js":"8","/Users/Cristina/Desktop/nimbus/client/src/components/Favorites.js":"9","/Users/Cristina/Desktop/nimbus/client/src/store/reducer.js":"10","/Users/Cristina/Desktop/nimbus/client/src/components/getCityFromCoordinates.js":"11"},{"size":1663,"mtime":1607127219121,"results":"12","hashOfConfig":"13"},{"size":634,"mtime":1607027180063,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1606938376446,"results":"15","hashOfConfig":"13"},{"size":348,"mtime":1606953864364,"results":"16","hashOfConfig":"13"},{"size":2145,"mtime":1607042468415,"results":"17","hashOfConfig":"13"},{"size":2513,"mtime":1607034911422,"results":"18","hashOfConfig":"13"},{"size":1207,"mtime":1607123791399,"results":"19","hashOfConfig":"13"},{"size":1998,"mtime":1607125040548,"results":"20","hashOfConfig":"13"},{"size":155,"mtime":1607035394693,"results":"21","hashOfConfig":"13"},{"size":275,"mtime":1607122635552,"results":"22","hashOfConfig":"13"},{"size":912,"mtime":1607128052857,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1uruq8z",{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"29"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"29"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"29"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"29"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"29"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Cristina/Desktop/nimbus/client/src/index.js",[],"/Users/Cristina/Desktop/nimbus/client/src/App.js",["54"],"import logo from './logo.svg';\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  //define function to get current location on load\n    function getLocation() {\n     // if statement for when page loads, if user's device supports geolocation, \n     // we will get their coordinates on load\n     console.log(navigator)\n     if (navigator.geolocation) {\n       navigator.geolocation.getCurrentPosition( function (position) {\n         console.log(position)\n       })\n     }\n   }\n   getLocation()\n\n  return (\n    <div className=\"App\">\n      <h1>App Component</h1>\n    </div>\n  );\n}\n\nexport default App;\n",["55","56"],"/Users/Cristina/Desktop/nimbus/client/src/reportWebVitals.js",[],"/Users/Cristina/Desktop/nimbus/client/src/components/BaseLayout.js",["57","58","59","60"],"import React, { useState, useEffect } from \"react\";\nimport Menu from \"../components/Menu\"\nimport Navbar from \"react-bootstrap/Navbar\"\nimport Button from \"react-bootstrap/Button\"\n\nfunction BaseLayout(props) {\n  return (\n    <div>\n      <Menu></Menu>\n      {props.children}\n      <footer>Footer</footer>\n    </div>\n  );\n}\n\nexport default BaseLayout;\n","/Users/Cristina/Desktop/nimbus/client/src/components/Login.js",["61"],"import React, { useState, useEffect } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n// import NavLink from 'react-bootstrap/esm/NavLink'\nimport { NavLink } from \"react-router-dom\";\n\nfunction Login(props) {\n  // Login in component will have to hit the server\n  // Because will have to check if the username exists\n  // make a local state to store username and\n  // password from textboxes\n  // Give initial state blank values\n  const [user, setUser] = useState({\n    username: \" \",\n    password: \" \",\n  });\n\n  const handleOnChange = (e) => {\n    setUser({\n      ...user,\n      [e.target.name]: e.target.value,\n    });\n  };\n  //declare function to post to server\n  const userLoggedIn = async () => {\n    const response = await fetch(\"http://localhost:3001/login/user\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(user),\n    });\n    const result = response.json();\n    console.log(result);\n    return result;\n  };\n\n  //declare function that will call userLoggedIn function\n  //When button clicked\n  //if credentials exist, redirect them to weather page\n  const handleLogin = async () => {\n    let user = await userLoggedIn();\n    if (user) {\n      props.history.push(\"/weather\");\n    }\n  };\n  return (\n    <div className=\"login-div\">\n      <h2>Login</h2>\n      <Form>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            type=\"username\"\n            placeholder=\"Enter username\"\n            onChange={handleOnChange}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            onChange={handleOnChange}\n          />\n        </Form.Group>\n\n        <Button variant=\"primary\" onClick={handleLogin}>\n          Login\n        </Button>\n      </Form>\n      <p>\n        Need an account? <NavLink to=\"/register\">Sign Up</NavLink>\n      </p>\n    </div>\n  );\n}\n\nexport default Login;\n","/Users/Cristina/Desktop/nimbus/client/src/components/Register.js",["62"],"import React, { useState, useEffect } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction Register(props) {\n  // register component will have to hit the server\n  // create a local state to store the username\n  // and password\n  const [user, setUser] = useState({\n    username: \" \",\n    password: \" \",\n  });\n\n  // make handleonChange function so\n  const handleonChange = (e) => {\n    setUser({\n      ...user,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // function to create user in db\n  // passing in username and passwords as args\n  // come from the state\n  // createUser function will then be called in\n  // the handleSave function\n  //  const createUser = () => {\n  //     return fetch('http://localhost:3001/register/user', {\n  //         method: 'POST',\n  //         headers: {\n  //             'Content-Type': 'application/json'\n  //         },\n  //         body: JSON.stringify(user)\n  //     }).then(response => response.json()).then(result => {\n  //         console.log(result)\n  //         return(result)\n  //     })\n  //  }\n\n  const createUser = async () => {\n    const response = await fetch(\"http://localhost:3001/register/user\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(user),\n    });\n\n    const result = response.json();\n    console.log(result);\n    return result;\n  };\n\n  const handleSave = async () => {\n    let savedUser = await createUser();\n    if (savedUser) {\n      props.history.push(\"/weather\");\n    }\n  };\n\n  return (\n    <div className=\"register-div\">\n      <h2>Register</h2>\n      <Form>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter username\"\n            name=\"username\"\n            onChange={handleonChange}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            onChange={handleonChange}\n          />\n        </Form.Group>\n        <Button variant=\"primary\" onClick={handleSave}>\n          Register\n        </Button>\n      </Form>\n      <p>\n        Already have an account? <NavLink to=\"/\">Sign in</NavLink>\n      </p>\n    </div>\n  );\n}\n\nexport default Register;\n","/Users/Cristina/Desktop/nimbus/client/src/components/Menu.js",["63","64","65"],"import React, { useState, useEffect } from \"react\";\nimport Navbar from 'react-bootstrap/Navbar'\nimport Button from 'react-bootstrap/Button'\nimport Nav from \"react-bootstrap/Nav\"\nimport Form from \"react-bootstrap/Form\"\nimport NavDropdown from 'react-bootstrap/NavDropdown'\nimport FormControl from 'react-bootstrap/FormControl'\nimport { NavLink } from 'react-router-dom'\n\n\nfunction Menu() {\n  return (\n    <div className=\"navbar-div\">\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand href=\"/weather\">Nimbus</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            {/* <Nav.Link href=\"#home\">Home</Nav.Link> */}\n            <NavLink to=\"/user/favorites\">Favorites</NavLink>\n            <Nav.Link href=\"#link\">Hourly Forecast</Nav.Link>\n            <Nav.Link href=\"#link\">7 Day Forecast</Nav.Link>\n          </Nav>\n          <Form inline>\n            <FormControl type=\"text\" placeholder=\"Enter City\" className=\"mr-sm-2\" />\n            <Button variant=\"outline-primary\">Search</Button>\n          </Form>\n        </Navbar.Collapse>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default Menu;\n","/Users/Cristina/Desktop/nimbus/client/src/components/Weather.js",["66","67"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\n\nfunction Weather(props) {\n    // make a local state to store weather object in\n    // const [weather, setWeather] = useState({\n    //     weather: {}\n    // })\n    // Will need to get current location coordinates\n    // Will need to get coordinates based on a search\n    // want to get the coordinates when the component mounts\n    useEffect(() => {\n        getLocation()\n    }, [])\n\n    function getLocation() {\n       if (navigator.geolocation) {\n           navigator.geolocation.getCurrentPosition(showCurrentPosition)\n       } \n   }\n\n    const showCurrentPosition = async (position) => {\n        console.log(position)\n       let latitude = position.coords.latitude;\n       let longitude = position.coords.longitude;\n       console.log(latitude)\n       console.log(longitude)\n       const apiKey = `00b0dda3295804976daaf4ca564bdf04`;\n       let apiURL = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&exclude=minutely&appid=${apiKey}&units=imperial`;\n        const response = await axios.get(apiURL)\n        const result = response.data\n        console.log(result)\n        // setWeather(result)\n        props.onFetchWeather(result)\n   }\n    \n\n    return(\n        <div>\n            <h1>Weather Component</h1>\n            <h3>{props.weather.lat}</h3>\n        </div>\n    )\n\n\n}\n\n// Will need mapStateToProps because trying\n// want to display parts of the global state\nconst mapStateToProps = (state) => {\n    return {\n        weather: state.weather\n    }\n}\n\n// will no longer need the local state because\n// moving fetched API to redux global state\n// will need DispatchToProps because trying \n// to update global state\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onFetchWeather: (weather) => dispatch({type: 'ON_FETCHED_WEATHER', payload: weather})\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Weather)","/Users/Cristina/Desktop/nimbus/client/src/components/Favorites.js",[],"/Users/Cristina/Desktop/nimbus/client/src/store/reducer.js",["68"],"\nconst initialState = {\n    weather : {}\n}\n\nconst reducer = (state = initialState, action) => {\n    if(action.type == 'ON_FETCHED_WEATHER') {\n        return {\n            ...state,\n            weather: action.payload\n        }\n    }\n    return state\n}\n\nexport default reducer","/Users/Cristina/Desktop/nimbus/client/src/components/getCityFromCoordinates.js",[],{"ruleId":"69","severity":1,"message":"70","line":1,"column":8,"nodeType":"71","messageId":"72","endLine":1,"endColumn":12},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"69","severity":1,"message":"77","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":25},{"ruleId":"69","severity":1,"message":"78","line":1,"column":27,"nodeType":"71","messageId":"72","endLine":1,"endColumn":36},{"ruleId":"69","severity":1,"message":"79","line":3,"column":8,"nodeType":"71","messageId":"72","endLine":3,"endColumn":14},{"ruleId":"69","severity":1,"message":"80","line":4,"column":8,"nodeType":"71","messageId":"72","endLine":4,"endColumn":14},{"ruleId":"69","severity":1,"message":"78","line":1,"column":27,"nodeType":"71","messageId":"72","endLine":1,"endColumn":36},{"ruleId":"69","severity":1,"message":"78","line":1,"column":27,"nodeType":"71","messageId":"72","endLine":1,"endColumn":36},{"ruleId":"69","severity":1,"message":"77","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":25},{"ruleId":"69","severity":1,"message":"78","line":1,"column":27,"nodeType":"71","messageId":"72","endLine":1,"endColumn":36},{"ruleId":"69","severity":1,"message":"81","line":6,"column":8,"nodeType":"71","messageId":"72","endLine":6,"endColumn":19},{"ruleId":"69","severity":1,"message":"77","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":25},{"ruleId":"82","severity":1,"message":"83","line":15,"column":8,"nodeType":"84","endLine":15,"endColumn":10,"suggestions":"85"},{"ruleId":"86","severity":1,"message":"87","line":7,"column":20,"nodeType":"88","messageId":"89","endLine":7,"endColumn":22},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-native-reassign",["90"],"no-negated-in-lhs",["91"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'Navbar' is defined but never used.","'Button' is defined but never used.","'NavDropdown' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getLocation'. Either include it or remove the dependency array.","ArrayExpression",["92"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},"Update the dependencies array to be: [getLocation]",{"range":"95","text":"96"},[495,497],"[getLocation]"]