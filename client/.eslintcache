[{"/Users/Cristina/Desktop/nimbus/client/src/index.js":"1","/Users/Cristina/Desktop/nimbus/client/src/App.js":"2","/Users/Cristina/Desktop/nimbus/client/src/reportWebVitals.js":"3","/Users/Cristina/Desktop/nimbus/client/src/components/BaseLayout.js":"4","/Users/Cristina/Desktop/nimbus/client/src/components/Login.js":"5","/Users/Cristina/Desktop/nimbus/client/src/components/Register.js":"6","/Users/Cristina/Desktop/nimbus/client/src/components/Menu.js":"7","/Users/Cristina/Desktop/nimbus/client/src/components/Weather.js":"8","/Users/Cristina/Desktop/nimbus/client/src/components/Favorites.js":"9","/Users/Cristina/Desktop/nimbus/client/src/store/reducer.js":"10","/Users/Cristina/Desktop/nimbus/client/src/components/getCityFromCoordinates.js":"11","/Users/Cristina/Desktop/nimbus/client/src/components/CurrentWeather.js":"12","/Users/Cristina/Desktop/nimbus/client/src/components/DailyWeather.js":"13","/Users/Cristina/Desktop/nimbus/client/src/components/CurrentWeatherDetails.js":"14","/Users/Cristina/Desktop/nimbus/client/src/components/Cloud.js":"15"},{"size":1663,"mtime":1607127219121,"results":"16","hashOfConfig":"17"},{"size":634,"mtime":1607027180063,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1606938376446,"results":"19","hashOfConfig":"17"},{"size":360,"mtime":1607454719265,"results":"20","hashOfConfig":"17"},{"size":2145,"mtime":1607042468415,"results":"21","hashOfConfig":"17"},{"size":2513,"mtime":1607034911422,"results":"22","hashOfConfig":"17"},{"size":4159,"mtime":1607554802482,"results":"23","hashOfConfig":"17"},{"size":3223,"mtime":1607541477559,"results":"24","hashOfConfig":"17"},{"size":155,"mtime":1607035394693,"results":"25","hashOfConfig":"17"},{"size":3551,"mtime":1607546930326,"results":"26","hashOfConfig":"17"},{"size":1224,"mtime":1607310371000,"results":"27","hashOfConfig":"17"},{"size":1008,"mtime":1607556621209,"results":"28","hashOfConfig":"17"},{"size":222,"mtime":1607548509031,"results":"29","hashOfConfig":"17"},{"size":1674,"mtime":1607547194130,"results":"30","hashOfConfig":"17"},{"size":1657,"mtime":1607554649501,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1uruq8z",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Cristina/Desktop/nimbus/client/src/index.js",[],["68","69"],"/Users/Cristina/Desktop/nimbus/client/src/App.js",["70"],"import logo from './logo.svg';\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  //define function to get current location on load\n    function getLocation() {\n     // if statement for when page loads, if user's device supports geolocation, \n     // we will get their coordinates on load\n     console.log(navigator)\n     if (navigator.geolocation) {\n       navigator.geolocation.getCurrentPosition( function (position) {\n         console.log(position)\n       })\n     }\n   }\n   getLocation()\n\n  return (\n    <div className=\"App\">\n      <h1>App Component</h1>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/Cristina/Desktop/nimbus/client/src/reportWebVitals.js",[],"/Users/Cristina/Desktop/nimbus/client/src/components/BaseLayout.js",["71","72","73","74"],"import React, { useState, useEffect } from \"react\";\nimport Menu from \"../components/Menu\"\nimport Navbar from \"react-bootstrap/Navbar\"\nimport Button from \"react-bootstrap/Button\"\n\nfunction BaseLayout(props) {\n  return (\n    <div>\n      <Menu {...props} ></Menu>\n      {props.children}\n      <footer>Footer</footer>\n    </div>\n  );\n}\n\nexport default BaseLayout;\n","/Users/Cristina/Desktop/nimbus/client/src/components/Login.js",["75"],"import React, { useState, useEffect } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n// import NavLink from 'react-bootstrap/esm/NavLink'\nimport { NavLink } from \"react-router-dom\";\n\nfunction Login(props) {\n  // Login in component will have to hit the server\n  // Because will have to check if the username exists\n  // make a local state to store username and\n  // password from textboxes\n  // Give initial state blank values\n  const [user, setUser] = useState({\n    username: \" \",\n    password: \" \",\n  });\n\n  const handleOnChange = (e) => {\n    setUser({\n      ...user,\n      [e.target.name]: e.target.value,\n    });\n  };\n  //declare function to post to server\n  const userLoggedIn = async () => {\n    const response = await fetch(\"http://localhost:3001/login/user\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(user),\n    });\n    const result = response.json();\n    console.log(result);\n    return result;\n  };\n\n  //declare function that will call userLoggedIn function\n  //When button clicked\n  //if credentials exist, redirect them to weather page\n  const handleLogin = async () => {\n    let user = await userLoggedIn();\n    if (user) {\n      props.history.push(\"/weather\");\n    }\n  };\n  return (\n    <div className=\"login-div\">\n      <h2>Login</h2>\n      <Form>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            type=\"username\"\n            placeholder=\"Enter username\"\n            onChange={handleOnChange}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            onChange={handleOnChange}\n          />\n        </Form.Group>\n\n        <Button variant=\"primary\" onClick={handleLogin}>\n          Login\n        </Button>\n      </Form>\n      <p>\n        Need an account? <NavLink to=\"/register\">Sign Up</NavLink>\n      </p>\n    </div>\n  );\n}\n\nexport default Login;\n","/Users/Cristina/Desktop/nimbus/client/src/components/Register.js",["76"],"import React, { useState, useEffect } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction Register(props) {\n  // register component will have to hit the server\n  // create a local state to store the username\n  // and password\n  const [user, setUser] = useState({\n    username: \" \",\n    password: \" \",\n  });\n\n  // make handleonChange function so\n  const handleonChange = (e) => {\n    setUser({\n      ...user,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // function to create user in db\n  // passing in username and passwords as args\n  // come from the state\n  // createUser function will then be called in\n  // the handleSave function\n  //  const createUser = () => {\n  //     return fetch('http://localhost:3001/register/user', {\n  //         method: 'POST',\n  //         headers: {\n  //             'Content-Type': 'application/json'\n  //         },\n  //         body: JSON.stringify(user)\n  //     }).then(response => response.json()).then(result => {\n  //         console.log(result)\n  //         return(result)\n  //     })\n  //  }\n\n  const createUser = async () => {\n    const response = await fetch(\"http://localhost:3001/register/user\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(user),\n    });\n\n    const result = response.json();\n    console.log(result);\n    return result;\n  };\n\n  const handleSave = async () => {\n    let savedUser = await createUser();\n    if (savedUser) {\n      props.history.push(\"/weather\");\n    }\n  };\n\n  return (\n    <div className=\"register-div\">\n      <h2>Register</h2>\n      <Form>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter username\"\n            name=\"username\"\n            onChange={handleonChange}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            onChange={handleonChange}\n          />\n        </Form.Group>\n        <Button variant=\"primary\" onClick={handleSave}>\n          Register\n        </Button>\n      </Form>\n      <p>\n        Already have an account? <NavLink to=\"/\">Sign in</NavLink>\n      </p>\n    </div>\n  );\n}\n\nexport default Register;\n","/Users/Cristina/Desktop/nimbus/client/src/components/Menu.js",["77","78"],"/Users/Cristina/Desktop/nimbus/client/src/components/Weather.js",["79","80"],"/Users/Cristina/Desktop/nimbus/client/src/components/Favorites.js",[],"/Users/Cristina/Desktop/nimbus/client/src/store/reducer.js",["81"],"/Users/Cristina/Desktop/nimbus/client/src/components/getCityFromCoordinates.js",["82"],"import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\n\n\n \nfunction  GetCityFromCoordinates () {\n    \n    const [city, setCity] = useState({\n      city: \"\"\n    });\n\n    let latitude = 33.93466913794421;\n    let longitude = -84.381074665022;\n    let apiKey = 'AIzaSyDHy8QmVO1C4nSFZhTo9KZZ24Py0IuHrY4'\n    let apiURL = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}&result_type=locality&key=${apiKey}`;\n    \n    const getCity = async () => {\n        const response = await axios.get(apiURL);\n        const result = response.data\n        console.log(result.results[0].formatted_address)\n            //.results[0].address_components[3].long_name)\n        \n        \n        setCity(result.results[0].address_components[3].long_name);\n    }\n\n    useEffect(() => {\n        getCity()\n    })\n    \n    return(\n        <div>\n            <h1>Test Component</h1>\n            <h2>hi</h2>\n        </div>\n    )\n}\n\n// Sandy Springs Coordinates\n// 33.751649691183076, -84.39383248335515;\n// 33.93466913794421, -84.381074665022\n\n// Glennville\n// 31.940284662191612, -81.92454235966069\n\n//Paris coordinates\n// 48.859677617673164, 2.350486869835329\n\nexport default GetCityFromCoordinates","/Users/Cristina/Desktop/nimbus/client/src/components/CurrentWeather.js",["83"],"/Users/Cristina/Desktop/nimbus/client/src/components/DailyWeather.js",["84"],"/Users/Cristina/Desktop/nimbus/client/src/components/CurrentWeatherDetails.js",[],"/Users/Cristina/Desktop/nimbus/client/src/components/Cloud.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":1,"column":8,"nodeType":"91","messageId":"92","endLine":1,"endColumn":12},{"ruleId":"89","severity":1,"message":"93","line":1,"column":17,"nodeType":"91","messageId":"92","endLine":1,"endColumn":25},{"ruleId":"89","severity":1,"message":"94","line":1,"column":27,"nodeType":"91","messageId":"92","endLine":1,"endColumn":36},{"ruleId":"89","severity":1,"message":"95","line":3,"column":8,"nodeType":"91","messageId":"92","endLine":3,"endColumn":14},{"ruleId":"89","severity":1,"message":"96","line":4,"column":8,"nodeType":"91","messageId":"92","endLine":4,"endColumn":14},{"ruleId":"89","severity":1,"message":"94","line":1,"column":27,"nodeType":"91","messageId":"92","endLine":1,"endColumn":36},{"ruleId":"89","severity":1,"message":"94","line":1,"column":27,"nodeType":"91","messageId":"92","endLine":1,"endColumn":36},{"ruleId":"89","severity":1,"message":"94","line":1,"column":27,"nodeType":"91","messageId":"92","endLine":1,"endColumn":36},{"ruleId":"89","severity":1,"message":"97","line":6,"column":8,"nodeType":"91","messageId":"92","endLine":6,"endColumn":19},{"ruleId":"89","severity":1,"message":"93","line":1,"column":17,"nodeType":"91","messageId":"92","endLine":1,"endColumn":25},{"ruleId":"98","severity":1,"message":"99","line":18,"column":8,"nodeType":"100","endLine":18,"endColumn":10,"suggestions":"101"},{"ruleId":"102","severity":1,"message":"103","line":10,"column":19,"nodeType":"104","messageId":"105","endLine":10,"endColumn":21},{"ruleId":"89","severity":1,"message":"106","line":8,"column":12,"nodeType":"91","messageId":"92","endLine":8,"endColumn":16},{"ruleId":"107","severity":1,"message":"108","line":13,"column":11,"nodeType":"109","endLine":15,"endColumn":12},{"ruleId":"89","severity":1,"message":"110","line":2,"column":10,"nodeType":"91","messageId":"92","endLine":2,"endColumn":17},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'Navbar' is defined but never used.","'Button' is defined but never used.","'NavDropdown' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getLocation'. Either include it or remove the dependency array.","ArrayExpression",["113"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'city' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'connect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},"Update the dependencies array to be: [getLocation]",{"range":"116","text":"117"},[643,645],"[getLocation]"]