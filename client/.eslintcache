[{"/Users/Cristina/Desktop/nimbus/client/src/index.js":"1","/Users/Cristina/Desktop/nimbus/client/src/App.js":"2","/Users/Cristina/Desktop/nimbus/client/src/reportWebVitals.js":"3","/Users/Cristina/Desktop/nimbus/client/src/components/BaseLayout.js":"4","/Users/Cristina/Desktop/nimbus/client/src/components/Login.js":"5","/Users/Cristina/Desktop/nimbus/client/src/components/Register.js":"6","/Users/Cristina/Desktop/nimbus/client/src/components/Menu.js":"7","/Users/Cristina/Desktop/nimbus/client/src/components/Weather.js":"8","/Users/Cristina/Desktop/nimbus/client/src/components/Favorites.js":"9","/Users/Cristina/Desktop/nimbus/client/src/store/reducer.js":"10","/Users/Cristina/Desktop/nimbus/client/src/components/getCityFromCoordinates.js":"11","/Users/Cristina/Desktop/nimbus/client/src/components/CurrentWeather.js":"12","/Users/Cristina/Desktop/nimbus/client/src/components/DailyWeather.js":"13","/Users/Cristina/Desktop/nimbus/client/src/components/CurrentWeatherDetails.js":"14","/Users/Cristina/Desktop/nimbus/client/src/components/Cloud.js":"15","/Users/Cristina/Desktop/nimbus/client/src/components/Footer.js":"16","/Users/Cristina/Desktop/nimbus/client/src/components/HourlyWeather.js":"17","/Users/Cristina/Desktop/nimbus/client/src/components/languages/languages.js":"18","/Users/Cristina/Desktop/nimbus/client/src/services/useWindowDimensions.js":"19"},{"size":1673,"mtime":1608046496898,"results":"20","hashOfConfig":"21"},{"size":634,"mtime":1607027180063,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1606938376446,"results":"23","hashOfConfig":"21"},{"size":395,"mtime":1608070095071,"results":"24","hashOfConfig":"21"},{"size":3238,"mtime":1607721982764,"results":"25","hashOfConfig":"21"},{"size":3697,"mtime":1607567772554,"results":"26","hashOfConfig":"21"},{"size":9223,"mtime":1608078777483,"results":"27","hashOfConfig":"21"},{"size":3975,"mtime":1608071165368,"results":"28","hashOfConfig":"21"},{"size":1810,"mtime":1608058400811,"results":"29","hashOfConfig":"21"},{"size":5273,"mtime":1608073261454,"results":"30","hashOfConfig":"21"},{"size":1224,"mtime":1607310371000,"results":"31","hashOfConfig":"21"},{"size":1393,"mtime":1607996218119,"results":"32","hashOfConfig":"21"},{"size":2240,"mtime":1608073959533,"results":"33","hashOfConfig":"21"},{"size":2266,"mtime":1608048695608,"results":"34","hashOfConfig":"21"},{"size":1657,"mtime":1607554649501,"results":"35","hashOfConfig":"21"},{"size":240,"mtime":1608067375804,"results":"36","hashOfConfig":"21"},{"size":996,"mtime":1608076820758,"results":"37","hashOfConfig":"21"},{"size":4104,"mtime":1608068533978,"results":"38","hashOfConfig":"21"},{"size":591,"mtime":1608003279217,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"1uruq8z",{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"43"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"43"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"43"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"/Users/Cristina/Desktop/nimbus/client/src/index.js",["86","87","88","89","90"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport BaseLayout from \"./components/BaseLayout\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Weather from \"./components/Weather\";\nimport Favorites from \"./components/Favorites\";\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport reducer from \"./store/reducer\"\nimport getCityFromCoordinates from \"./components/getCityFromCoordinates\";\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <BaseLayout>\n          <Switch>\n            {/* <Route component={App} path=\"/app\" exact></Route>\n            <Route component={Login} path=\"/\" exact></Route>\n            <Route component={Register} path=\"/register\"></Route> */}\n            <Route component={Weather} path=\"/\" exact></Route>\n            {/* <Route component={Favorites} path=\"/favorites\"></Route>\n            <Route component={getCityFromCoordinates} path=\"/test\"></Route> */}\n          </Switch>\n        </BaseLayout>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["91","92"],"/Users/Cristina/Desktop/nimbus/client/src/App.js",["93"],"import logo from './logo.svg';\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  //define function to get current location on load\n    function getLocation() {\n     // if statement for when page loads, if user's device supports geolocation, \n     // we will get their coordinates on load\n     console.log(navigator)\n     if (navigator.geolocation) {\n       navigator.geolocation.getCurrentPosition( function (position) {\n         console.log(position)\n       })\n     }\n   }\n   getLocation()\n\n  return (\n    <div className=\"App\">\n      <h1>App Component</h1>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/Cristina/Desktop/nimbus/client/src/reportWebVitals.js",[],"/Users/Cristina/Desktop/nimbus/client/src/components/BaseLayout.js",["94","95","96","97"],"/Users/Cristina/Desktop/nimbus/client/src/components/Login.js",["98"],"import React, { useState, useEffect } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n// import NavLink from 'react-bootstrap/esm/NavLink'\nimport { NavLink } from \"react-router-dom\";\nimport axios from \"axios\"\n\nimport \"../styles/login.css\"\nimport Cloud from \"./Cloud\";\n\nfunction Login(props) {\n  // Login in component will have to hit the server\n  // Because will have to check if the username exists\n  // make a local state to store username and\n  // password from textboxes\n  // Give initial state blank values\n  const [user, setUser] = useState({});\n\n  const handleOnChange = (e) => {\n    setUser({\n      ...user,\n      [e.target.name]: e.target.value,\n    });\n  };\n  //declare function to post to server\n  const userLoggedIn = async () => {\n    \n    //making same fetch call but with axios\n    const response = await axios.post('http://localhost:3001/login/user', {\n      username: user.username,\n      password: user.password\n    })\n    const result = response.data\n    return result\n    \n    // const response = await fetch(\"http://localhost:3001/login/user\", {\n    //   method: \"POST\",\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //   },\n    //   body: JSON.stringify(user),\n    // });\n    // const result = response.json();\n    // console.log(result);\n    // return result;\n  };\n\n  //declare function that will call userLoggedIn function\n  //When button clicked\n  //if credentials exist, redirect them to weather page\n  const handleLogin = async () => {\n    \n    let userToken = await userLoggedIn();\n    //const response = await axios.post(\"http://localhost:3001/login/user\", {\n    //   username: user.username,\n    //   password: user.password,\n    // });\n    // const result = response.data;\n    // console.log(result);\n    //console.log(user)\n    if (user) {\n      const token = userToken.token\n      localStorage.setItem('jsonwebtoken', token)\n       \n      props.history.push(\"/weather\");\n    }\n    \n    // let user = await userLoggedIn();\n    // if (user) {\n    //   props.history.push(\"/weather\");\n    // }\n  };\n  return (\n    <div className=\"login-div\">\n      <div className=\"title-logo\">\n        <Cloud />\n        <h3>Nimbus</h3>\n      </div>\n\n      <Form>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label></Form.Label>\n          <Form.Control\n            class=\"input-sizing\"\n            type=\"username\"\n            name= 'username'\n            placeholder=\"Enter email\"\n            onChange={handleOnChange}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label></Form.Label>\n          <Form.Control\n            class=\"input-sizing\"\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            onChange={handleOnChange}\n          />\n        </Form.Group>\n\n        <Button size=\"lg\" className=\"button-color\" variant=\"light\" onClick={handleLogin}>\n          <div className=\"button-text\">Login</div>\n        </Button>\n      </Form>\n\n      <p>\n        Need an account?{\" \"}\n        <NavLink to=\"/register\">\n          <span className=\"link\">Sign Up</span>\n        </NavLink>\n      </p>\n    </div>\n  );\n}\n\nexport default Login;\n","/Users/Cristina/Desktop/nimbus/client/src/components/Register.js",["99"],"import React, { useState, useEffect } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { NavLink } from \"react-router-dom\";\nimport \"../styles/register.css\"\nimport Cloud from \"./Cloud\";\n\nfunction Register(props) {\n  // register component will have to hit the server\n  // create a local state to store the username\n  // and password\n  const [user, setUser] = useState({\n    username: \" \",\n    password: \" \",\n  });\n\n  // make handleonChange function so\n  const handleOnChange = (e) => {\n    setUser({\n      ...user,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // function to create user in db\n  // passing in username and passwords as args\n  // come from the state\n  // createUser function will then be called in\n  // the handleSave function\n  //  const createUser = () => {\n  //     return fetch('http://localhost:3001/register/user', {\n  //         method: 'POST',\n  //         headers: {\n  //             'Content-Type': 'application/json'\n  //         },\n  //         body: JSON.stringify(user)\n  //     }).then(response => response.json()).then(result => {\n  //         console.log(result)\n  //         return(result)\n  //     })\n  //  }\n\n  const createUser = async () => {\n    const response = await fetch(\"http://localhost:3001/register/user\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(user),\n    });\n\n    const result = response.json();\n    console.log(result);\n    return result;\n  };\n\n  const handleSave = async () => {\n    let savedUser = await createUser();\n    if (savedUser) {\n      props.history.push(\"/weather\");\n    }\n  };\n\n  return (\n    <div className=\"register-div\">\n      <div className=\"title-logo\">\n        <Cloud />\n        <h3>Nimbus</h3>\n      </div>\n\n      <Form>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label></Form.Label>\n          <Form.Control\n            class=\"input-sizing\"\n            type=\"username\"\n            placeholder=\"Enter email\"\n            onChange={handleOnChange}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label></Form.Label>\n          <Form.Control\n            class=\"input-sizing\"\n            type=\"password\"\n            placeholder=\"Password\"\n            onChange={handleOnChange}\n          />\n        </Form.Group>\n\n        <Button size=\"lg\"className=\"button-color\" variant=\"light\" onClick={handleSave}>\n          <div className=\"button-text\">Login</div>\n        </Button>\n      </Form>\n\n      <p>\n        Already have an account?{\" \"}\n        <NavLink to=\"/\">\n          <span className=\"link\">Sign In</span>\n        </NavLink>\n      </p>\n    </div>\n\n    // <div className=\"register-div\">\n    //   <h2>Register</h2>\n    //   <Form>\n    //     <Form.Group controlId=\"formBasicEmail\">\n    //       <Form.Label>Username</Form.Label>\n    //       <Form.Control\n    //         type=\"text\"\n    //         placeholder=\"Enter username\"\n    //         name=\"username\"\n    //         onChange={handleonChange}\n    //       />\n    //     </Form.Group>\n\n    //     <Form.Group controlId=\"formBasicPassword\">\n    //       <Form.Label>Password</Form.Label>\n    //       <Form.Control\n    //         type=\"password\"\n    //         placeholder=\"Password\"\n    //         name=\"password\"\n    //         onChange={handleonChange}\n    //       />\n    //     </Form.Group>\n    //     <Button variant=\"primary\" onClick={handleSave}>\n    //       Register\n    //     </Button>\n    //   </Form>\n    //   <p>\n    //     Already have an account? <NavLink to=\"/\">Sign in</NavLink>\n    //   </p>\n    // </div>\n  );\n}\n\nexport default Register;\n","/Users/Cristina/Desktop/nimbus/client/src/components/Menu.js",["100","101"],"/Users/Cristina/Desktop/nimbus/client/src/components/Weather.js",["102","103"],"/Users/Cristina/Desktop/nimbus/client/src/components/Favorites.js",[],"/Users/Cristina/Desktop/nimbus/client/src/store/reducer.js",["104","105","106","107","108","109","110","111","112","113"],"/Users/Cristina/Desktop/nimbus/client/src/components/getCityFromCoordinates.js",["114"],"import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\n\n\n \nfunction  GetCityFromCoordinates () {\n    \n    const [city, setCity] = useState({\n      city: \"\"\n    });\n\n    let latitude = 33.93466913794421;\n    let longitude = -84.381074665022;\n    let apiKey = 'AIzaSyDHy8QmVO1C4nSFZhTo9KZZ24Py0IuHrY4'\n    let apiURL = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}&result_type=locality&key=${apiKey}`;\n    \n    const getCity = async () => {\n        const response = await axios.get(apiURL);\n        const result = response.data\n        console.log(result.results[0].formatted_address)\n            //.results[0].address_components[3].long_name)\n        \n        \n        setCity(result.results[0].address_components[3].long_name);\n    }\n\n    useEffect(() => {\n        getCity()\n    })\n    \n    return(\n        <div>\n            <h1>Test Component</h1>\n            <h2>hi</h2>\n        </div>\n    )\n}\n\n// Sandy Springs Coordinates\n// 33.751649691183076, -84.39383248335515;\n// 33.93466913794421, -84.381074665022\n\n// Glennville\n// 31.940284662191612, -81.92454235966069\n\n//Paris coordinates\n// 48.859677617673164, 2.350486869835329\n\nexport default GetCityFromCoordinates","/Users/Cristina/Desktop/nimbus/client/src/components/CurrentWeather.js",["115","116"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport '../styles/currentWeather.css'\nimport Button from \"react-bootstrap/Button\"; \n\nfunction CurrentWeather(props) {\n  return (\n    <div className=\"current-weather-div\">\n      {/* <h2>Current Weather Box</h2> */}\n      {props.weather.isWeatherLoaded ? (\n        <>\n          {/* <div className=\"favorite\">\n            <Button variant=\"outline-info\" size=\"sm\">\n              {props.strings.favorite_button}\n            </Button>\n          </div> */}\n          <h1 id=\"city\">{props.weather.city}</h1>\n          <h2>{props.weather.description}</h2>\n          <img\n            src={`http://openweathermap.org/img/wn/${props.weather.icon}@2x.png`}\n          ></img>\n          <p id=\"temp\">\n            {props.weather.temp} &deg;{props.tempUnitSymbol}{\" \"}\n          </p>\n          {/* <p> Feels Like: {props.weather.feels_like} &deg;F </p>\n          <p>💧 {props.weather.humidity} %</p>\n          <p>\n            {\" \"}\n            🌝 {props.weather.sunrise} | 🌚 {props.weather.sunset}\n          </p> */}\n        </>\n      ) : (\n        <p></p>\n      )}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      weather: state.weather,\n      strings: state.strings,\n      tempUnit: state.tempUnit,\n      tempUnitSymbol: state.tempUnitSymbol\n    };\n}\n\nexport default connect(mapStateToProps)(CurrentWeather);\n","/Users/Cristina/Desktop/nimbus/client/src/components/DailyWeather.js",["117"],"/Users/Cristina/Desktop/nimbus/client/src/components/CurrentWeatherDetails.js",[],"/Users/Cristina/Desktop/nimbus/client/src/components/Cloud.js",[],"/Users/Cristina/Desktop/nimbus/client/src/components/Footer.js",[],"/Users/Cristina/Desktop/nimbus/client/src/components/HourlyWeather.js",["118"],"/Users/Cristina/Desktop/nimbus/client/src/components/languages/languages.js",["119"],"// languages object\n\nconst English = {\n  favorites: \"Favorites\",\n  hourly_forecast: \"Hourly Forecast\",\n  daily_forecast: \"7 Day Forecast\",\n  logout: \"Logout\",\n  enter_city: \"Enter City\",\n  search: \"Search\",\n  favorite_button: \"Favorite\",\n  feels_like: \"Feels Like\",\n  humidity: \"Humidity\",\n  sunrise: \"sunrise\",\n  sunset: \"sunset\",\n  cloudiness: \"Cloudiness\",\n  wind_speed: \"Wind Speed\",\n  uv_index: \"UV Index\",\n  address: \"Address\",\n  city_zip: \"City, zip code\",\n  zip_code: \"zip code\",\n  add: \"Add\",\n  languages: \"Languages\",\n  english: \"English\",\n  spanish: \"Spanish\",\n  french: \"French\",\n  vietnamese: \"Vietnamese\",\n  chinese: \"Chinese (Simplified)\",\n  units: \"Units\",\n  fahrenheit: \"Fahrenheit\",\n  celsius: \"Celsius\",\n};\n\nconst Spanish = {\n  favorites: \"Favoritos\",\n  hourly_forecast: \"Por hora\",\n  daily_forecast: \"7 días\",\n  logout: \"Cerrar sesión\",\n  enter_city: \"Buscar ciudad\",\n  search: \"Buscar\",\n  favorite_button: \"Favorito\",\n  feels_like: \"Sensación térmica\",\n  humidity: \"Humedad\",\n  sunrise: \"Amanecer\",\n  sunset: \"Puesta del sol\",\n  cloudiness: \"Nubosidad\",\n  wind_speed: \"Viento\",\n  uv_index: \"Índice UV\",\n  address: \"Direccion\",\n  zip_code: \"código postal\",\n  city_zip: \"ciudad,código postal\",\n  zip_code: \"código postal\",\n  add: \"Añadir\",\n  languages: \"Idiomas\",\n  english: \"Inglés | English\",\n  spanish: \"Español | Spanish\",\n  french: \"Francés | French\",\n  vietnamese: \"Vietnamita | Vietnamese\",\n  chinese: \"Chino | Chinese (Simplified)\",\n  units: \"Unidades\",\n  fahrenheit: \"Fahrenheit\",\n  celsius: \"Celsius\",\n};\n\nconst French = {\n  favorites: \"Préféré\",\n  hourly_forecast: \"Par heure\",\n  daily_forecast: \"7 jours\",\n  logout: \"Se déconnecter\",\n  enter_city: \"Recherche de ville\",\n  search: \"Recherche\",\n  favorite_button: \"Préféré\",\n  feels_like: \"T. ressentie\",\n  humidity: \"Humidité\",\n  sunrise: \"Lever du soleil\",\n  sunset: \"le coucher du soleil\",\n  cloudiness: \"Nébulosité\",\n  wind_speed: \"Vent\",\n  uv_index: \"Indice UV\",\n  address: \"adresse\",\n  city_zip: \"ville, code postal\",\n  zip_code: \"code postal\",\n  add: \"Ajouter\",\n  languages: \"Langues\",\n  english: \"Anglais | English\",\n  spanish: \"Espagnol | Spanish\",\n  french: \"Français | French\",\n  vietnamese: \"Vietnamienne | Vietnamese\",\n  chinese: \"Chinois | Chinese (Simplified)\",\n  units: \"Unités\",\n  fahrenheit: \"Fahrenheit\",\n  celsius: \"Celsius\",\n};\n\nconst Vietnamese = {\n  // favorites: \"Préféré\",\n  hourly_forecast: \"Hàng giờ\",\n  daily_forecast: \"7 ngày\",\n  //logout: \"Se déconnecter\",\n  enter_city: \"Tim thành phố\",\n  search: \"Tim\",\n  //favorite_button: \"Préféré\",\n  feels_like: \"Cảm giác như\",\n  humidity: \"Độ ẩm\",\n  sunrise: \"bình Minh\",\n  sunset: \"Hoàng hôn\",\n  cloudiness: \"mây mù\",\n  wind_speed: \"Gió\",\n  uv_index: \"Chỉ số UV\",\n  //address: \"adresse\",\n  //city_zip: \"ville, code postal\",\n  //zip_code: \"code postal\",\n  //add: \"Ajouter\",\n  languages: \"ngôn ngữ\",\n  english: \"Tiếng Anh | English\",\n  spanish: \"người Tây Ban Nha | Spanish\",\n  french: \"người Pháp | French\",\n  vietnamese: \"Tiếng Việt | Vietnamese\",\n  chinese: \"người Trung Quốc | Chinese (Simplified)\",\n  units: \"các đơn vị\",\n  fahrenheit: \"độ F\",\n  celsius: \"độ C\",\n};\n\nconst Chinese = {\n  // favorites: \"Préféré\",\n  hourly_forecast: \"每小时\",\n  daily_forecast: \"7 天\",\n  //logout: \"Se déconnecter\",\n  enter_city: \"搜索城市\",\n  search: \"搜索\",\n  //favorite_button: \"Préféré\",\n  feels_like: \"体感温度\",\n  humidity: \"湿度\",\n  sunrise: \"日出\",\n  sunset: \"日落\",\n  cloudiness: \"浑浊\",\n  wind_speed: \"大风\",\n  uv_index: \"紫外线指数\",\n  //address: \"adresse\",\n  //city_zip: \"ville, code postal\",\n  //zip_code: \"code postal\",\n  //add: \"Ajouter\",\n  languages: \"语言\",\n  english: \"英语 | English\",\n  spanish: \"西班牙文 | Spanish\",\n  french: \"法国人 | French\",\n  vietnamese: \"越南语 | Vietnamese\",\n  chinese: \"中文 | Chinese (Simplified)\",\n  units: \"单位\",\n  fahrenheit: \"华氏度 | Fahrenheit\",\n  celsius: \"摄氏温度 | Celsius\",\n};\n\n\n\n\n\nmodule.exports = {\n  English,\n  Spanish,\n  French,\n  Vietnamese,\n  Chinese\n};\n","/Users/Cristina/Desktop/nimbus/client/src/services/useWindowDimensions.js",[],{"ruleId":"120","severity":1,"message":"121","line":4,"column":8,"nodeType":"122","messageId":"123","endLine":4,"endColumn":11},{"ruleId":"120","severity":1,"message":"124","line":8,"column":8,"nodeType":"122","messageId":"123","endLine":8,"endColumn":13},{"ruleId":"120","severity":1,"message":"125","line":9,"column":8,"nodeType":"122","messageId":"123","endLine":9,"endColumn":16},{"ruleId":"120","severity":1,"message":"126","line":11,"column":8,"nodeType":"122","messageId":"123","endLine":11,"endColumn":17},{"ruleId":"120","severity":1,"message":"127","line":15,"column":8,"nodeType":"122","messageId":"123","endLine":15,"endColumn":30},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"120","severity":1,"message":"132","line":1,"column":8,"nodeType":"122","messageId":"123","endLine":1,"endColumn":12},{"ruleId":"120","severity":1,"message":"133","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":25},{"ruleId":"120","severity":1,"message":"134","line":1,"column":27,"nodeType":"122","messageId":"123","endLine":1,"endColumn":36},{"ruleId":"120","severity":1,"message":"135","line":3,"column":8,"nodeType":"122","messageId":"123","endLine":3,"endColumn":14},{"ruleId":"120","severity":1,"message":"136","line":4,"column":8,"nodeType":"122","messageId":"123","endLine":4,"endColumn":14},{"ruleId":"120","severity":1,"message":"134","line":1,"column":27,"nodeType":"122","messageId":"123","endLine":1,"endColumn":36},{"ruleId":"120","severity":1,"message":"134","line":1,"column":27,"nodeType":"122","messageId":"123","endLine":1,"endColumn":36},{"ruleId":"120","severity":1,"message":"134","line":1,"column":27,"nodeType":"122","messageId":"123","endLine":1,"endColumn":36},{"ruleId":"120","severity":1,"message":"137","line":8,"column":10,"nodeType":"122","messageId":"123","endLine":8,"endColumn":17},{"ruleId":"120","severity":1,"message":"133","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":25},{"ruleId":"138","severity":1,"message":"139","line":22,"column":6,"nodeType":"140","endLine":22,"endColumn":8,"suggestions":"141"},{"ruleId":"142","severity":1,"message":"143","line":23,"column":19,"nodeType":"144","messageId":"145","endLine":23,"endColumn":21},{"ruleId":"142","severity":1,"message":"143","line":113,"column":19,"nodeType":"144","messageId":"145","endLine":113,"endColumn":21},{"ruleId":"142","severity":1,"message":"143","line":114,"column":23,"nodeType":"144","messageId":"145","endLine":114,"endColumn":25},{"ruleId":"142","severity":1,"message":"143","line":122,"column":24,"nodeType":"144","messageId":"145","endLine":122,"endColumn":26},{"ruleId":"142","severity":1,"message":"143","line":130,"column":24,"nodeType":"144","messageId":"145","endLine":130,"endColumn":26},{"ruleId":"142","severity":1,"message":"143","line":138,"column":24,"nodeType":"144","messageId":"145","endLine":138,"endColumn":26},{"ruleId":"142","severity":1,"message":"143","line":146,"column":24,"nodeType":"144","messageId":"145","endLine":146,"endColumn":26},{"ruleId":"142","severity":1,"message":"143","line":155,"column":19,"nodeType":"144","messageId":"145","endLine":155,"endColumn":21},{"ruleId":"142","severity":1,"message":"143","line":156,"column":23,"nodeType":"144","messageId":"145","endLine":156,"endColumn":25},{"ruleId":"142","severity":1,"message":"143","line":164,"column":24,"nodeType":"144","messageId":"145","endLine":164,"endColumn":26},{"ruleId":"120","severity":1,"message":"146","line":8,"column":12,"nodeType":"122","messageId":"123","endLine":8,"endColumn":16},{"ruleId":"120","severity":1,"message":"136","line":4,"column":8,"nodeType":"122","messageId":"123","endLine":4,"endColumn":14},{"ruleId":"147","severity":1,"message":"148","line":19,"column":11,"nodeType":"149","endLine":21,"endColumn":12},{"ruleId":"147","severity":1,"message":"148","line":19,"column":15,"nodeType":"149","endLine":21,"endColumn":16},{"ruleId":"147","severity":1,"message":"148","line":21,"column":13,"nodeType":"149","endLine":23,"endColumn":14},{"ruleId":"150","severity":1,"message":"151","line":51,"column":3,"nodeType":"152","messageId":"145","endLine":51,"endColumn":11},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'Login' is defined but never used.","'Register' is defined but never used.","'Favorites' is defined but never used.","'getCityFromCoordinates' is defined but never used.","no-native-reassign",["153"],"no-negated-in-lhs",["154"],"'logo' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Navbar' is defined but never used.","'Button' is defined but never used.","'NavLink' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getLocation'. Either include it or remove the dependency array.","ArrayExpression",["155"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'city' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-dupe-keys","Duplicate key 'zip_code'.","ObjectExpression","no-global-assign","no-unsafe-negation",{"desc":"156","fix":"157"},"Update the dependencies array to be: [getLocation]",{"range":"158","text":"159"},[817,819],"[getLocation]"]