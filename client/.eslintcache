[{"/Users/Cristina/Desktop/nimbus/client/src/index.js":"1","/Users/Cristina/Desktop/nimbus/client/src/App.js":"2","/Users/Cristina/Desktop/nimbus/client/src/reportWebVitals.js":"3","/Users/Cristina/Desktop/nimbus/client/src/components/BaseLayout.js":"4","/Users/Cristina/Desktop/nimbus/client/src/components/Login.js":"5","/Users/Cristina/Desktop/nimbus/client/src/components/Register.js":"6","/Users/Cristina/Desktop/nimbus/client/src/components/Menu.js":"7","/Users/Cristina/Desktop/nimbus/client/src/components/Weather.js":"8","/Users/Cristina/Desktop/nimbus/client/src/components/Favorites.js":"9","/Users/Cristina/Desktop/nimbus/client/src/store/reducer.js":"10","/Users/Cristina/Desktop/nimbus/client/src/components/getCityFromCoordinates.js":"11","/Users/Cristina/Desktop/nimbus/client/src/components/CurrentWeather.js":"12","/Users/Cristina/Desktop/nimbus/client/src/components/DailyWeather.js":"13","/Users/Cristina/Desktop/nimbus/client/src/components/CurrentWeatherDetails.js":"14","/Users/Cristina/Desktop/nimbus/client/src/components/Cloud.js":"15","/Users/Cristina/Desktop/nimbus/client/src/components/Footer.js":"16","/Users/Cristina/Desktop/nimbus/client/src/components/HourlyWeather.js":"17","/Users/Cristina/Desktop/nimbus/client/src/components/languages/languages.js":"18"},{"size":1658,"mtime":1607702657558,"results":"19","hashOfConfig":"20"},{"size":634,"mtime":1607027180063,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1606938376446,"results":"22","hashOfConfig":"20"},{"size":378,"mtime":1607565039199,"results":"23","hashOfConfig":"20"},{"size":3238,"mtime":1607721982764,"results":"24","hashOfConfig":"20"},{"size":3697,"mtime":1607567772554,"results":"25","hashOfConfig":"20"},{"size":7417,"mtime":1607838874013,"results":"26","hashOfConfig":"20"},{"size":3408,"mtime":1607837557950,"results":"27","hashOfConfig":"20"},{"size":1765,"mtime":1607823984988,"results":"28","hashOfConfig":"20"},{"size":4361,"mtime":1607838896538,"results":"29","hashOfConfig":"20"},{"size":1224,"mtime":1607310371000,"results":"30","hashOfConfig":"20"},{"size":1262,"mtime":1607823157657,"results":"31","hashOfConfig":"20"},{"size":2052,"mtime":1607630494334,"results":"32","hashOfConfig":"20"},{"size":1813,"mtime":1607822624505,"results":"33","hashOfConfig":"20"},{"size":1657,"mtime":1607554649501,"results":"34","hashOfConfig":"20"},{"size":194,"mtime":1607565252129,"results":"35","hashOfConfig":"20"},{"size":831,"mtime":1607641171215,"results":"36","hashOfConfig":"20"},{"size":2114,"mtime":1607828852484,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1uruq8z",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"40"},"/Users/Cristina/Desktop/nimbus/client/src/index.js",[],["83","84"],"/Users/Cristina/Desktop/nimbus/client/src/App.js",["85"],"import logo from './logo.svg';\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  //define function to get current location on load\n    function getLocation() {\n     // if statement for when page loads, if user's device supports geolocation, \n     // we will get their coordinates on load\n     console.log(navigator)\n     if (navigator.geolocation) {\n       navigator.geolocation.getCurrentPosition( function (position) {\n         console.log(position)\n       })\n     }\n   }\n   getLocation()\n\n  return (\n    <div className=\"App\">\n      <h1>App Component</h1>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/Cristina/Desktop/nimbus/client/src/reportWebVitals.js",[],"/Users/Cristina/Desktop/nimbus/client/src/components/BaseLayout.js",["86","87","88","89"],"import React, { useState, useEffect } from \"react\";\nimport Menu from \"../components/Menu\"\nimport Navbar from \"react-bootstrap/Navbar\"\nimport Button from \"react-bootstrap/Button\"\nimport Footer from \"./Footer\";\n\nfunction BaseLayout(props) {\n  return (\n    <div>\n      <Menu {...props} ></Menu>\n      {props.children}\n      <Footer />\n    </div>\n  );\n}\n\nexport default BaseLayout;\n","/Users/Cristina/Desktop/nimbus/client/src/components/Login.js",["90"],"import React, { useState, useEffect } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n// import NavLink from 'react-bootstrap/esm/NavLink'\nimport { NavLink } from \"react-router-dom\";\nimport axios from \"axios\"\n\nimport \"../styles/login.css\"\nimport Cloud from \"./Cloud\";\n\nfunction Login(props) {\n  // Login in component will have to hit the server\n  // Because will have to check if the username exists\n  // make a local state to store username and\n  // password from textboxes\n  // Give initial state blank values\n  const [user, setUser] = useState({});\n\n  const handleOnChange = (e) => {\n    setUser({\n      ...user,\n      [e.target.name]: e.target.value,\n    });\n  };\n  //declare function to post to server\n  const userLoggedIn = async () => {\n    \n    //making same fetch call but with axios\n    const response = await axios.post('http://localhost:3001/login/user', {\n      username: user.username,\n      password: user.password\n    })\n    const result = response.data\n    return result\n    \n    // const response = await fetch(\"http://localhost:3001/login/user\", {\n    //   method: \"POST\",\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //   },\n    //   body: JSON.stringify(user),\n    // });\n    // const result = response.json();\n    // console.log(result);\n    // return result;\n  };\n\n  //declare function that will call userLoggedIn function\n  //When button clicked\n  //if credentials exist, redirect them to weather page\n  const handleLogin = async () => {\n    \n    let userToken = await userLoggedIn();\n    //const response = await axios.post(\"http://localhost:3001/login/user\", {\n    //   username: user.username,\n    //   password: user.password,\n    // });\n    // const result = response.data;\n    // console.log(result);\n    //console.log(user)\n    if (user) {\n      const token = userToken.token\n      localStorage.setItem('jsonwebtoken', token)\n       \n      props.history.push(\"/weather\");\n    }\n    \n    // let user = await userLoggedIn();\n    // if (user) {\n    //   props.history.push(\"/weather\");\n    // }\n  };\n  return (\n    <div className=\"login-div\">\n      <div className=\"title-logo\">\n        <Cloud />\n        <h3>Nimbus</h3>\n      </div>\n\n      <Form>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label></Form.Label>\n          <Form.Control\n            class=\"input-sizing\"\n            type=\"username\"\n            name= 'username'\n            placeholder=\"Enter email\"\n            onChange={handleOnChange}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label></Form.Label>\n          <Form.Control\n            class=\"input-sizing\"\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            onChange={handleOnChange}\n          />\n        </Form.Group>\n\n        <Button size=\"lg\" className=\"button-color\" variant=\"light\" onClick={handleLogin}>\n          <div className=\"button-text\">Login</div>\n        </Button>\n      </Form>\n\n      <p>\n        Need an account?{\" \"}\n        <NavLink to=\"/register\">\n          <span className=\"link\">Sign Up</span>\n        </NavLink>\n      </p>\n    </div>\n  );\n}\n\nexport default Login;\n","/Users/Cristina/Desktop/nimbus/client/src/components/Register.js",["91"],"import React, { useState, useEffect } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { NavLink } from \"react-router-dom\";\nimport \"../styles/register.css\"\nimport Cloud from \"./Cloud\";\n\nfunction Register(props) {\n  // register component will have to hit the server\n  // create a local state to store the username\n  // and password\n  const [user, setUser] = useState({\n    username: \" \",\n    password: \" \",\n  });\n\n  // make handleonChange function so\n  const handleOnChange = (e) => {\n    setUser({\n      ...user,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // function to create user in db\n  // passing in username and passwords as args\n  // come from the state\n  // createUser function will then be called in\n  // the handleSave function\n  //  const createUser = () => {\n  //     return fetch('http://localhost:3001/register/user', {\n  //         method: 'POST',\n  //         headers: {\n  //             'Content-Type': 'application/json'\n  //         },\n  //         body: JSON.stringify(user)\n  //     }).then(response => response.json()).then(result => {\n  //         console.log(result)\n  //         return(result)\n  //     })\n  //  }\n\n  const createUser = async () => {\n    const response = await fetch(\"http://localhost:3001/register/user\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(user),\n    });\n\n    const result = response.json();\n    console.log(result);\n    return result;\n  };\n\n  const handleSave = async () => {\n    let savedUser = await createUser();\n    if (savedUser) {\n      props.history.push(\"/weather\");\n    }\n  };\n\n  return (\n    <div className=\"register-div\">\n      <div className=\"title-logo\">\n        <Cloud />\n        <h3>Nimbus</h3>\n      </div>\n\n      <Form>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label></Form.Label>\n          <Form.Control\n            class=\"input-sizing\"\n            type=\"username\"\n            placeholder=\"Enter email\"\n            onChange={handleOnChange}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label></Form.Label>\n          <Form.Control\n            class=\"input-sizing\"\n            type=\"password\"\n            placeholder=\"Password\"\n            onChange={handleOnChange}\n          />\n        </Form.Group>\n\n        <Button size=\"lg\"className=\"button-color\" variant=\"light\" onClick={handleSave}>\n          <div className=\"button-text\">Login</div>\n        </Button>\n      </Form>\n\n      <p>\n        Already have an account?{\" \"}\n        <NavLink to=\"/\">\n          <span className=\"link\">Sign In</span>\n        </NavLink>\n      </p>\n    </div>\n\n    // <div className=\"register-div\">\n    //   <h2>Register</h2>\n    //   <Form>\n    //     <Form.Group controlId=\"formBasicEmail\">\n    //       <Form.Label>Username</Form.Label>\n    //       <Form.Control\n    //         type=\"text\"\n    //         placeholder=\"Enter username\"\n    //         name=\"username\"\n    //         onChange={handleonChange}\n    //       />\n    //     </Form.Group>\n\n    //     <Form.Group controlId=\"formBasicPassword\">\n    //       <Form.Label>Password</Form.Label>\n    //       <Form.Control\n    //         type=\"password\"\n    //         placeholder=\"Password\"\n    //         name=\"password\"\n    //         onChange={handleonChange}\n    //       />\n    //     </Form.Group>\n    //     <Button variant=\"primary\" onClick={handleSave}>\n    //       Register\n    //     </Button>\n    //   </Form>\n    //   <p>\n    //     Already have an account? <NavLink to=\"/\">Sign in</NavLink>\n    //   </p>\n    // </div>\n  );\n}\n\nexport default Register;\n","/Users/Cristina/Desktop/nimbus/client/src/components/Menu.js",["92","93"],"/Users/Cristina/Desktop/nimbus/client/src/components/Weather.js",["94","95"],"/Users/Cristina/Desktop/nimbus/client/src/components/Favorites.js",[],"/Users/Cristina/Desktop/nimbus/client/src/store/reducer.js",["96","97","98","99","100"],"/Users/Cristina/Desktop/nimbus/client/src/components/getCityFromCoordinates.js",["101"],"import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\n\n\n \nfunction  GetCityFromCoordinates () {\n    \n    const [city, setCity] = useState({\n      city: \"\"\n    });\n\n    let latitude = 33.93466913794421;\n    let longitude = -84.381074665022;\n    let apiKey = 'AIzaSyDHy8QmVO1C4nSFZhTo9KZZ24Py0IuHrY4'\n    let apiURL = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}&result_type=locality&key=${apiKey}`;\n    \n    const getCity = async () => {\n        const response = await axios.get(apiURL);\n        const result = response.data\n        console.log(result.results[0].formatted_address)\n            //.results[0].address_components[3].long_name)\n        \n        \n        setCity(result.results[0].address_components[3].long_name);\n    }\n\n    useEffect(() => {\n        getCity()\n    })\n    \n    return(\n        <div>\n            <h1>Test Component</h1>\n            <h2>hi</h2>\n        </div>\n    )\n}\n\n// Sandy Springs Coordinates\n// 33.751649691183076, -84.39383248335515;\n// 33.93466913794421, -84.381074665022\n\n// Glennville\n// 31.940284662191612, -81.92454235966069\n\n//Paris coordinates\n// 48.859677617673164, 2.350486869835329\n\nexport default GetCityFromCoordinates","/Users/Cristina/Desktop/nimbus/client/src/components/CurrentWeather.js",["102"],"/Users/Cristina/Desktop/nimbus/client/src/components/DailyWeather.js",["103"],"import React from 'react'\nimport { connect } from \"react-redux\";\nimport \"../styles/dailyWeather.css\"\n\nfunction DailyWeather(props) {\n    console.log(props)\n    // if (!props.weather.isWeatherLoaded) {\n    //   return \"\";\n    // }\n\n    return (\n      <div className=\"daily-main-div\">\n        {props.weather.dailyValues.map((day) => (\n          <div className=\"day-div\">\n            <div className=\"weekday\">\n              <p>{day.date_time}</p>\n            </div>\n            <div className=\"icon\">\n              <img\n                src={`http://openweathermap.org/img/wn/${day.icon}@2x.png`}\n              ></img>\n            </div>\n            <div className=\"temp\">\n              <p>\n                <b>{day.max_temp} </b> | {day.min_temp} \n              </p>\n            </div>\n          </div>\n        ))}\n        {/* <div className=\"day-div\">\n          <div className=\"weekday\">\n            <p>Friday</p>\n          </div>\n          <div className=\"icon\">\n            <img src={\"http://openweathermap.org/img/wn/10d@2x.png\"}></img>\n          </div>\n          <div className=\"temp\">\n            <p>84 &deg;F</p>\n          </div>\n        </div>\n\n        <div className=\"day-div\">\n          <div className=\"weekday\">\n            <p>Saturday</p>\n          </div>\n          <div className=\"icon\">\n            <img src={\"http://openweathermap.org/img/wn/10d@2x.png\"}></img>\n          </div>\n          <div className=\"temp\">\n            <p>84 &deg;F</p>\n          </div>\n        </div>\n\n        <div className=\"day-div\">\n          <div className=\"weekday\">\n            <p>Sunday</p>\n          </div>\n          <div className=\"icon\">\n            <img src={\"http://openweathermap.org/img/wn/10d@2x.png\"}></img>\n          </div>\n          <div className=\"temp\">\n            <p>84 &deg;F</p>\n          </div>\n        </div> */}\n      </div>\n    );\n}\n\n// need to connect to redux global store to get weather values\nconst mapStateToProps = (state) => {\n    return {\n        weather: state.weather\n    }\n}\n\n\nexport default connect(mapStateToProps)(DailyWeather)","/Users/Cristina/Desktop/nimbus/client/src/components/CurrentWeatherDetails.js",[],"/Users/Cristina/Desktop/nimbus/client/src/components/Cloud.js",[],"/Users/Cristina/Desktop/nimbus/client/src/components/Footer.js",[],"/Users/Cristina/Desktop/nimbus/client/src/components/HourlyWeather.js",["104"],"import React from 'react'\nimport { connect } from 'react-redux'\nimport \"../styles/hourlyWeather.css\"\n\n\nfunction HourlyWeather(props) {\n  \n  return (\n    <div className=\"hourly-main-div\">\n      {props.weather.hourlyValues.map((hour) => (\n        <div className=\"hour-div\">\n          <div className=\"hour\">\n            <p>{hour.date_time}</p>\n          </div>\n          <div className=\"hour-icon\">\n            <img\n              src={`http://openweathermap.org/img/wn/${hour.icon}@2x.png`}\n            ></img>\n          </div>\n          <div className=\"hour-temp\">\n            <p>\n              <b>{hour.temp} </b> \n            </p>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    weather: state.weather,\n  };\n};\n\nexport default connect(mapStateToProps)(HourlyWeather)","/Users/Cristina/Desktop/nimbus/client/src/components/languages/languages.js",["105"],"// languages object\n\nconst English = {\n  favorites: \"Favorites\",\n  hourly_forecast: \"Hourly Forecast\",\n  daily_forecast: \"7 Day Forecast\",\n  logout: \"Logout\",\n  enter_city: \"Enter City\",\n  search: \"Search\",\n  favorite_button: \"Favorite\",\n  feels_like: \"Feels Like\",\n  humidity: \"Humidity\",\n  sunrise: \"sunrise\",\n  sunset: \"sunset\",\n  cloudiness: \"Cloudiness\",\n  wind_speed: \"Wind Speed\",\n  uv_index: \"UV Index\",\n  address: \"Address\",\n  city_zip: \"City, zip code\",\n  zip_code: \"zip code\",\n  add: \"Add\",\n  languages: \"Languages\",\n  english: \"English\",\n  spanish: \"Spanish\",\n  french: \"French\",\n  units: \"Units\",\n  fahrenheit: \"Fahrenheit\",\n  celsius: \"Celsius\",\n};\n\nconst Spanish = {\n  favorites: \"Favoritos\",\n  hourly_forecast: \"Por hora\",\n  daily_forecast: \"7 días\",\n  logout: \"Cerrar sesión\",\n  enter_city: \"Buscar ciudad\",\n  search: \"Buscar\",\n  favorite_button: \"Favorito\",\n  feels_like: \"Sensación térmica\",\n  humidity: \"Humedad\",\n  sunrise: \"Amanecer\",\n  sunset: \"Puesta del sol\",\n  cloudiness: \"Nubosidad\",\n  wind_speed: \"Viento\",\n  uv_index: \"Índice UV\",\n  address: \"Direccion\",\n  zip_code: \"código postal\",\n  city_zip: \"ciudad,código postal\",\n  zip_code: \"código postal\",\n  add: \"Añadir\",\n  languages: \"Idiomas\",\n  english: \"Inglés\",\n  spanish: \"Español\",\n  french: \"Francés\",\n  units: \"Unidades\",\n  fahrenheit: \"Fahrenheit\",\n  celsius: \"Celsius\",\n};\n\nconst French = {\n  favorites: \"Préféré\",\n  hourly_forecast: \"Par heure\",\n  daily_forecast: \"7 jours\",\n  logout: \"Se déconnecter\",\n  enter_city: \"Recherche de ville\",\n  search: \"Recherche\",\n  favorite_button: \"Préféré\",\n  feels_like: \"T. ressentie\",\n  humidity: \"Humidité\",\n  sunrise: \"Lever du soleil\",\n  sunset: \"le coucher du soleil\",\n  cloudiness: \"Nébulosité\",\n  wind_speed: \"Vent\",\n  uv_index: \"Indice UV\",\n  address: \"adresse\",\n  city_zip: \"ville, code postal\",\n  zip_code: \"code postal\",\n  add: \"Ajouter\",\n  languages: \"Langues\",\n  english: \"Anglais\",\n  spanish: \"Espagnol\",\n  french: \"Français\",\n  units: \"Unités\",\n  fahrenheit: \"Fahrenheit\",\n  celsius: \"Celsius\",\n};\n\nmodule.exports = {\n  English,\n  Spanish,\n  French,\n};\n",{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":1,"column":8,"nodeType":"112","messageId":"113","endLine":1,"endColumn":12},{"ruleId":"110","severity":1,"message":"114","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":25},{"ruleId":"110","severity":1,"message":"115","line":1,"column":27,"nodeType":"112","messageId":"113","endLine":1,"endColumn":36},{"ruleId":"110","severity":1,"message":"116","line":3,"column":8,"nodeType":"112","messageId":"113","endLine":3,"endColumn":14},{"ruleId":"110","severity":1,"message":"117","line":4,"column":8,"nodeType":"112","messageId":"113","endLine":4,"endColumn":14},{"ruleId":"110","severity":1,"message":"115","line":1,"column":27,"nodeType":"112","messageId":"113","endLine":1,"endColumn":36},{"ruleId":"110","severity":1,"message":"115","line":1,"column":27,"nodeType":"112","messageId":"113","endLine":1,"endColumn":36},{"ruleId":"110","severity":1,"message":"115","line":1,"column":27,"nodeType":"112","messageId":"113","endLine":1,"endColumn":36},{"ruleId":"110","severity":1,"message":"118","line":8,"column":10,"nodeType":"112","messageId":"113","endLine":8,"endColumn":17},{"ruleId":"110","severity":1,"message":"114","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":25},{"ruleId":"119","severity":1,"message":"120","line":19,"column":8,"nodeType":"121","endLine":19,"endColumn":10,"suggestions":"122"},{"ruleId":"123","severity":1,"message":"124","line":20,"column":19,"nodeType":"125","messageId":"126","endLine":20,"endColumn":21},{"ruleId":"123","severity":1,"message":"124","line":108,"column":19,"nodeType":"125","messageId":"126","endLine":108,"endColumn":21},{"ruleId":"123","severity":1,"message":"124","line":109,"column":23,"nodeType":"125","messageId":"126","endLine":109,"endColumn":25},{"ruleId":"123","severity":1,"message":"124","line":117,"column":24,"nodeType":"125","messageId":"126","endLine":117,"endColumn":26},{"ruleId":"123","severity":1,"message":"124","line":125,"column":24,"nodeType":"125","messageId":"126","endLine":125,"endColumn":26},{"ruleId":"110","severity":1,"message":"127","line":8,"column":12,"nodeType":"112","messageId":"113","endLine":8,"endColumn":16},{"ruleId":"128","severity":1,"message":"129","line":19,"column":11,"nodeType":"130","endLine":21,"endColumn":12},{"ruleId":"128","severity":1,"message":"129","line":19,"column":15,"nodeType":"130","endLine":21,"endColumn":16},{"ruleId":"128","severity":1,"message":"129","line":16,"column":13,"nodeType":"130","endLine":18,"endColumn":14},{"ruleId":"131","severity":1,"message":"132","line":49,"column":3,"nodeType":"133","messageId":"126","endLine":49,"endColumn":11},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'Navbar' is defined but never used.","'Button' is defined but never used.","'NavLink' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getLocation'. Either include it or remove the dependency array.","ArrayExpression",["136"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'city' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-dupe-keys","Duplicate key 'zip_code'.","ObjectExpression","no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},"Update the dependencies array to be: [getLocation]",{"range":"139","text":"140"},[687,689],"[getLocation]"]